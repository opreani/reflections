What happens when you initialize a repository? Why do you need to do it?

When intializing a new repository git creates a secret folder that stores commits. 
So that you can store commits!

How is the staging area different from the working directory and the repository? What value do you think it offers?

It keeps a tracking of the files ready to be commited

How can you use the staging area to make sure you have one commit per logical change?

You only commit when you want to, the staging area doesn't do this for yourself so you use the staging area to commit the files 
you want to, containing the changes you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If you just want to test out different behaviors or if you want to create another language for the game

How do the diagrams help you visualize the branch structure?

You can see what commits were made on the specific branches

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Have working latest commits on the same branch. To get a better picture of the branches.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Pros: It always shows what to commit and shows errors if the commits have the same code worked with. Cons:--
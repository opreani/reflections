When would you want to create a remote repository rather than keeping all your work local? 

When you want to keep track more clearly of your changes and also if you dont want to stack up your internal storage

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Not every change has to be pulled to the computer as you know best what to push and pull rather than leaving it on auto

Describe the differences between forks, clones, and branches. When would you use one instead of another?

You may want to fork a repository so that you have acces to it and add your own commits, you may clone another repostory so that you
have it on your computer and work with the files and you may use branches when you are making changes that you don't want to
commit to the master branch so you use another branch for testing.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can see what changes were made even if you go ofline 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would asked for what was changed and then compare the two files together. It would be easier because I would keep in touch more with
the colaborator. By using git, you dont have to activly be in touch with the colaborator because all changes and all commits 
pushed to the working branches on git hub will always show the changes. Ha Ha !

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you are very sure of your change you can push it directly to the master branch but if you are not sure on what you are
changing than it is a good idea to create a separate branch and push you changes there so that other colaborators can check
the changes. This is a good option only when working with colaborators as you dont need to do this if you are working alone.
Also the files you are changing may also be changed by other colaborators on the same line of code so maybe you wish to keep
both changes so thats why is good to use a separate branch and not push it directly. But if you ask me this option is only good
when you are not sure of what your commiting cause if youre sure than you can push it directly to master and if someone else makes a 
change that he is also sure about he can also push it to master, eitherway there are pros and cons. And Im finaly done !   
